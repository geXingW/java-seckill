<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.common.mapper.OrderMapper">

    <resultMap type="com.example.common.entity.Order" id="OrderMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="pId" column="p_id" jdbcType="INTEGER"/>
        <result property="pName" column="p_name" jdbcType="VARCHAR"/>
        <result property="pQuantity" column="p_quantity" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="OrderMap">
        select
          id, p_id, p_name, p_quantity
        from `order`
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OrderMap">
        select
          id, p_id, p_name, p_quantity
        from `order`
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="pId != null">
                and p_id = #{pId}
            </if>
            <if test="pName != null and pName != ''">
                and p_name = #{pName}
            </if>
            <if test="pQuantity != null">
                and p_quantity = #{pQuantity}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from order
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="pId != null">
                and p_id = #{pId}
            </if>
            <if test="pName != null and pName != ''">
                and p_name = #{pName}
            </if>
            <if test="pQuantity != null">
                and p_quantity = #{pQuantity}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="create" keyProperty="id">
        insert into `order`(id, p_id, p_name, p_quantity)
        values(#{id}, #{pId}, #{pName}, #{pQuantity})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into `order`(p_id, p_name, p_quantity)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.pId}, #{entity.pName}, #{entity.pQuantity})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into `order`(p_id, p_name, p_quantity)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.pId}, #{entity.pName}, #{entity.pQuantity})
        </foreach>
        on duplicate key update
        p_id = values(p_id),
        p_name = values(p_name),
        p_quantity = values(p_quantity)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update `order`
        <set>
            <if test="pId != null">
                p_id = #{pId},
            </if>
            <if test="pName != null and pName != ''">
                p_name = #{pName},
            </if>
            <if test="pQuantity != null">
                p_quantity = #{pQuantity},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from order where id = #{id}
    </delete>

</mapper>

